<prism:PrismApplication x:Class="KyoshinEewViewer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:KyoshinEewViewer"
             xmlns:prism="http://prismlibrary.com/">
	<Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/Themes/Dark.xaml" />
				<ResourceDictionary Source="/IntensityThemes/Standard.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<!-- ボタン -->
			<Style TargetType="{x:Type Button}">
				<Setter Property="Background" Value="{DynamicResource LandColor}" />
				<Setter Property="BorderBrush" Value="{DynamicResource PrefStrokeColor}" />
				<Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Padding" Value="1" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
								<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsDefaulted" Value="true">
									<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="Background" TargetName="border" Value="{DynamicResource DockTitleBackgroundColor}" />
									<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource LandStrokeColor}" />
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter Property="Background" TargetName="border" Value="{DynamicResource DockBackgroundColor}" />
									<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource LandStrokeColor}" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Background" TargetName="border" Value="{DynamicResource CopyrightBackgroundColor}" />
									<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource LandStrokeColor}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!-- チェックボックス -->
			<SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
			<SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
			<SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
			<SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
			<SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
			<SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
			<Style TargetType="{x:Type CheckBox}">
				<Setter Property="Background" Value="{DynamicResource MainBackgroundColor}" />
				<Setter Property="BorderBrush" Value="{DynamicResource SubForegroundColor}" />
				<Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type CheckBox}">
							<Grid x:Name="templateRoot" SnapsToDevicePixels="True">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource SubForegroundColor}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="Center">
									<Grid x:Name="markGrid" VerticalAlignment="Center">
										<Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{DynamicResource ForegroundColor}" Margin="1" Opacity="0" Stretch="None" />
										<Rectangle x:Name="indeterminateMark" Fill="{DynamicResource ForegroundColor}" Margin="2" Opacity="0" />
									</Grid>
								</Border>
								<ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="HasContent" Value="true">
									<Setter Property="Padding" Value="4,-1,0,0" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource MainBackgroundColor}" />
									<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource ForegroundColor}" />
									<Setter Property="Opacity" TargetName="optionMark" Value=".5" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Opacity" TargetName="checkBoxBorder" Value=".5" />
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}" />
									<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}" />
									<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}" />
									<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}" />
								</Trigger>
								<Trigger Property="IsChecked" Value="true">
									<Setter Property="Opacity" TargetName="optionMark" Value="1" />
									<Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
								</Trigger>
								<Trigger Property="IsChecked" Value="{x:Null}">
									<Setter Property="Opacity" TargetName="optionMark" Value="0" />
									<Setter Property="Opacity" TargetName="indeterminateMark" Value="1" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!-- タブアイテム -->
			<SolidColorBrush x:Key="TabItem.Static.Background" Color="#33FFFFFF" />
			<SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC" />
			<SolidColorBrush x:Key="TabItem.MouseOver.Background" Color="#33FFFFFF" />
			<SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0" />
			<SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9" />
			<SolidColorBrush x:Key="TabItem.Selected.Border" Color="Transparent" />
			<SolidColorBrush x:Key="TabItem.Selected.Background" Color="#33FFFFFF" />
			<Style TargetType="{x:Type TabItem}">
				<Setter Property="Foreground" Value="{DynamicResource SubForegroundColor}" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="{DynamicResource SubForegroundColor}" />
				<Setter Property="Margin" Value="0" />
				<Setter Property="Padding" Value="6,2,6,2" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				<Setter Property="VerticalContentAlignment" Value="Stretch" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TabItem}">
							<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
								<Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" Background="Transparent" Margin="0" />
								<ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
							</Grid>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
										<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
									</MultiDataTrigger.Conditions>
									<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56" />
									<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}" />
									<Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}" />
									<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,0" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
										<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
									</MultiDataTrigger.Conditions>
									<Setter Property="BorderThickness" TargetName="mainBorder" Value="0" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
										<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
									</MultiDataTrigger.Conditions>
									<Setter Property="Panel.ZIndex" Value="1" />
									<Setter Property="Margin" Value="-2,-2,-2,-1" />
									<Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
									<Setter Property="Background" TargetName="mainBorder" Value="{DynamicResource DockTitleBackgroundColor}" />
									<Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1" />
								</MultiDataTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<!-- グループボックス -->
			<BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
			<Style TargetType="{x:Type GroupBox}">
				<Setter Property="BorderBrush" Value="{DynamicResource SubForegroundColor}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type GroupBox}">
							<Grid SnapsToDevicePixels="true">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="6" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="6" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
									<RowDefinition Height="6" />
								</Grid.RowDefinitions>
								<Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" />
								<Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" CornerRadius="0" Grid.Row="1" Grid.RowSpan="3">
									<Border.OpacityMask>
										<MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
											<Binding ElementName="Header" Path="ActualWidth" />
											<Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
											<Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
										</MultiBinding>
									</Border.OpacityMask>
									<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0">
									</Border>
								</Border>
								<Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
									<ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</Border>
								<ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Application.Resources>
</prism:PrismApplication>